{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { createEmptyHistoryState, registerHistory } from '@lexical/history';\nexport { createEmptyHistoryState } from '@lexical/history';\nimport { useMemo, useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useHistory(editor, externalHistoryState) {\n  let delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  const historyState = useMemo(() => externalHistoryState || createEmptyHistoryState(), [externalHistoryState]);\n  useEffect(() => {\n    return registerHistory(editor, historyState, delay);\n  }, [delay, editor, historyState]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction HistoryPlugin(_ref) {\n  let {\n    delay,\n    externalHistoryState\n  } = _ref;\n  const [editor] = useLexicalComposerContext();\n  useHistory(editor, externalHistoryState, delay);\n  return null;\n}\nexport { HistoryPlugin };","map":{"version":3,"names":["useLexicalComposerContext","createEmptyHistoryState","registerHistory","useMemo","useEffect","useHistory","editor","externalHistoryState","delay","arguments","length","undefined","historyState","HistoryPlugin","_ref"],"sources":["/media/ks/My thing/test/textditor/node_modules/@lexical/react/LexicalHistoryPlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { createEmptyHistoryState, registerHistory } from '@lexical/history';\nexport { createEmptyHistoryState } from '@lexical/history';\nimport { useMemo, useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useHistory(editor, externalHistoryState, delay = 1000) {\n  const historyState = useMemo(() => externalHistoryState || createEmptyHistoryState(), [externalHistoryState]);\n  useEffect(() => {\n    return registerHistory(editor, historyState, delay);\n  }, [delay, editor, historyState]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction HistoryPlugin({\n  delay,\n  externalHistoryState\n}) {\n  const [editor] = useLexicalComposerContext();\n  useHistory(editor, externalHistoryState, delay);\n  return null;\n}\n\nexport { HistoryPlugin };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,yBAAyB,QAAQ,uCAAuC;AACjF,SAASC,uBAAuB,EAAEC,eAAe,QAAQ,kBAAkB;AAC3E,SAASD,uBAAuB,QAAQ,kBAAkB;AAC1D,SAASE,OAAO,EAAEC,SAAS,QAAQ,OAAO;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAUA,CAACC,MAAM,EAAEC,oBAAoB,EAAgB;EAAA,IAAdC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAC5D,MAAMG,YAAY,GAAGT,OAAO,CAAC,MAAMI,oBAAoB,IAAIN,uBAAuB,CAAC,CAAC,EAAE,CAACM,oBAAoB,CAAC,CAAC;EAC7GH,SAAS,CAAC,MAAM;IACd,OAAOF,eAAe,CAACI,MAAM,EAAEM,YAAY,EAAEJ,KAAK,CAAC;EACrD,CAAC,EAAE,CAACA,KAAK,EAAEF,MAAM,EAAEM,YAAY,CAAC,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,aAAaA,CAAAC,IAAA,EAGnB;EAAA,IAHoB;IACrBN,KAAK;IACLD;EACF,CAAC,GAAAO,IAAA;EACC,MAAM,CAACR,MAAM,CAAC,GAAGN,yBAAyB,CAAC,CAAC;EAC5CK,UAAU,CAACC,MAAM,EAAEC,oBAAoB,EAAEC,KAAK,CAAC;EAC/C,OAAO,IAAI;AACb;AAEA,SAASK,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}