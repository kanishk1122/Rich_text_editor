{"ast":null,"code":"var _jsxFileName = \"/media/ks/My thing/test/textditor_Using_lixical/src/Editor.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ExampleTheme from \"./themes/ExampleTheme\";\nimport { LexicalComposer } from \"@lexical/react/LexicalComposer\";\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\";\nimport { ContentEditable } from \"@lexical/react/LexicalContentEditable\";\nimport { HistoryPlugin } from \"@lexical/react/LexicalHistoryPlugin\";\nimport { AutoFocusPlugin } from \"@lexical/react/LexicalAutoFocusPlugin\";\nimport LexicalErrorBoundary from \"@lexical/react/LexicalErrorBoundary\";\nimport TreeViewPlugin from \"./plugins/TreeViewPlugin\";\nimport ToolbarPlugin from \"./plugins/ToolbarPlugin\";\nimport { HeadingNode, QuoteNode } from \"@lexical/rich-text\";\nimport { TableCellNode, TableNode, TableRowNode } from \"@lexical/table\";\nimport { ListItemNode, ListNode } from \"@lexical/list\";\nimport { CodeHighlightNode, CodeNode } from \"@lexical/code\";\nimport { AutoLinkNode, LinkNode } from \"@lexical/link\";\nimport { LinkPlugin } from \"@lexical/react/LexicalLinkPlugin\";\nimport { ListPlugin } from \"@lexical/react/LexicalListPlugin\";\nimport { MarkdownShortcutPlugin } from \"@lexical/react/LexicalMarkdownShortcutPlugin\";\nimport { TRANSFORMERS } from \"@lexical/markdown\";\nimport ListMaxIndentLevelPlugin from \"./plugins/ListMaxIndentLevelPlugin\";\nimport CodeHighlightPlugin from \"./plugins/CodeHighlightPlugin\";\nimport AutoLinkPlugin from \"./plugins/AutoLinkPlugin\";\nimport { ColoredTextNode } from \"./nodes/ColoredTextNode\";\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\n\n// Placeholder component for the editor\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Placeholder() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-placeholder\",\n    children: \"Enter some rich text...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n\n// Initial editor content as a JSON object\n_c = Placeholder;\nconst initialContent = {\n  root: {\n    children: [{\n      children: [{\n        detail: 0,\n        format: 0,\n        mode: \"normal\",\n        style: \"\",\n        text: \"This is a test\",\n        type: \"text\",\n        version: 1\n      }],\n      direction: \"ltr\",\n      format: \"\",\n      indent: 0,\n      type: \"paragraph\",\n      version: 1\n    }],\n    direction: \"ltr\",\n    format: \"\",\n    indent: 0,\n    type: \"root\",\n    version: 1\n  }\n};\n\n// Plugin to initialize the editor content\nfunction InitializeEditorPlugin() {\n  _s();\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    editor.update(() => {\n      const state = editor.parseEditorState(initialContent);\n      editor.setEditorState(state);\n    });\n  }, [editor]);\n  return null;\n}\n\n// Editor configuration\n_s(InitializeEditorPlugin, \"mCqe7sh4aC9mLBXPHfG3d/PNTaQ=\", false, function () {\n  return [useLexicalComposerContext];\n});\n_c2 = InitializeEditorPlugin;\nconst editorConfig = {\n  theme: ExampleTheme,\n  onError(error) {\n    throw error;\n  },\n  nodes: [HeadingNode, ListNode, ListItemNode, QuoteNode, CodeNode, CodeHighlightNode, TableNode, TableCellNode, TableRowNode, AutoLinkNode, LinkNode, ColoredTextNode // Register the custom node here\n  ]\n};\n\n// Main Editor component\nexport default function Editor() {\n  _s2();\n  const [editorState, setEditorState] = useState(null);\n  useEffect(() => {\n    // Load the saved editor state from localStorage\n    const savedState = localStorage.getItem(\"editorState\");\n    if (savedState) {\n      setEditorState(JSON.parse(savedState));\n    }\n  }, []);\n  const handleEditorChange = editorState => {\n    // Save the editor state to localStorage\n    localStorage.setItem(\"editorState\", JSON.stringify(editorState));\n    console.log(editorState);\n    setEditorState(editorState);\n  };\n  return /*#__PURE__*/_jsxDEV(LexicalComposer, {\n    initialConfig: editorConfig,\n    children: [/*#__PURE__*/_jsxDEV(InitializeEditorPlugin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(ToolbarPlugin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-inner\",\n        children: [/*#__PURE__*/_jsxDEV(RichTextPlugin, {\n          contentEditable: /*#__PURE__*/_jsxDEV(ContentEditable, {\n            className: \"editor-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 30\n          }, this),\n          placeholder: /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 26\n          }, this),\n          ErrorBoundary: LexicalErrorBoundary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HistoryPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TreeViewPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoFocusPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeHighlightPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LinkPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoLinkPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListMaxIndentLevelPlugin, {\n          maxDepth: 7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarkdownShortcutPlugin, {\n          transformers: TRANSFORMERS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s2(Editor, \"vO50NAl90ATfEBE0hTuCGBz9MCs=\");\n_c3 = Editor;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Placeholder\");\n$RefreshReg$(_c2, \"InitializeEditorPlugin\");\n$RefreshReg$(_c3, \"Editor\");","map":{"version":3,"names":["React","useEffect","useState","ExampleTheme","LexicalComposer","RichTextPlugin","ContentEditable","HistoryPlugin","AutoFocusPlugin","LexicalErrorBoundary","TreeViewPlugin","ToolbarPlugin","HeadingNode","QuoteNode","TableCellNode","TableNode","TableRowNode","ListItemNode","ListNode","CodeHighlightNode","CodeNode","AutoLinkNode","LinkNode","LinkPlugin","ListPlugin","MarkdownShortcutPlugin","TRANSFORMERS","ListMaxIndentLevelPlugin","CodeHighlightPlugin","AutoLinkPlugin","ColoredTextNode","useLexicalComposerContext","jsxDEV","_jsxDEV","Placeholder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","initialContent","root","detail","format","mode","style","text","type","version","direction","indent","InitializeEditorPlugin","_s","editor","update","state","parseEditorState","setEditorState","_c2","editorConfig","theme","onError","error","nodes","Editor","_s2","editorState","savedState","localStorage","getItem","JSON","parse","handleEditorChange","setItem","stringify","console","log","initialConfig","contentEditable","placeholder","ErrorBoundary","maxDepth","transformers","_c3","$RefreshReg$"],"sources":["/media/ks/My thing/test/textditor_Using_lixical/src/Editor.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ExampleTheme from \"./themes/ExampleTheme\";\nimport { LexicalComposer } from \"@lexical/react/LexicalComposer\";\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\";\nimport { ContentEditable } from \"@lexical/react/LexicalContentEditable\";\nimport { HistoryPlugin } from \"@lexical/react/LexicalHistoryPlugin\";\nimport { AutoFocusPlugin } from \"@lexical/react/LexicalAutoFocusPlugin\";\nimport LexicalErrorBoundary from \"@lexical/react/LexicalErrorBoundary\";\nimport TreeViewPlugin from \"./plugins/TreeViewPlugin\";\nimport ToolbarPlugin from \"./plugins/ToolbarPlugin\";\nimport { HeadingNode, QuoteNode } from \"@lexical/rich-text\";\nimport { TableCellNode, TableNode, TableRowNode } from \"@lexical/table\";\nimport { ListItemNode, ListNode } from \"@lexical/list\";\nimport { CodeHighlightNode, CodeNode } from \"@lexical/code\";\nimport { AutoLinkNode, LinkNode } from \"@lexical/link\";\nimport { LinkPlugin } from \"@lexical/react/LexicalLinkPlugin\";\nimport { ListPlugin } from \"@lexical/react/LexicalListPlugin\";\nimport { MarkdownShortcutPlugin } from \"@lexical/react/LexicalMarkdownShortcutPlugin\";\nimport { TRANSFORMERS } from \"@lexical/markdown\";\nimport ListMaxIndentLevelPlugin from \"./plugins/ListMaxIndentLevelPlugin\";\nimport CodeHighlightPlugin from \"./plugins/CodeHighlightPlugin\";\nimport AutoLinkPlugin from \"./plugins/AutoLinkPlugin\";\nimport { ColoredTextNode } from \"./nodes/ColoredTextNode\";\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\n\n// Placeholder component for the editor\nfunction Placeholder() {\n  return <div className=\"editor-placeholder\">Enter some rich text...</div>;\n}\n\n// Initial editor content as a JSON object\nconst initialContent = {\n  root: {\n    children: [\n      {\n        children: [\n          {\n            detail: 0,\n            format: 0,\n            mode: \"normal\",\n            style: \"\",\n            text: \"This is a test\",\n            type: \"text\",\n            version: 1,\n          },\n        ],\n        direction: \"ltr\",\n        format: \"\",\n        indent: 0,\n        type: \"paragraph\",\n        version: 1,\n      },\n    ],\n    direction: \"ltr\",\n    format: \"\",\n    indent: 0,\n    type: \"root\",\n    version: 1,\n  },\n};\n\n// Plugin to initialize the editor content\nfunction InitializeEditorPlugin() {\n  const [editor] = useLexicalComposerContext();\n\n  useEffect(() => {\n    editor.update(() => {\n      const state = editor.parseEditorState(initialContent);\n      editor.setEditorState(state);\n    });\n  }, [editor]);\n\n  return null;\n}\n\n// Editor configuration\nconst editorConfig = {\n  theme: ExampleTheme,\n  onError(error) {\n    throw error;\n  },\n  nodes: [\n    HeadingNode,\n    ListNode,\n    ListItemNode,\n    QuoteNode,\n    CodeNode,\n    CodeHighlightNode,\n    TableNode,\n    TableCellNode,\n    TableRowNode,\n    AutoLinkNode,\n    LinkNode,\n    ColoredTextNode, // Register the custom node here\n  ],\n};\n\n// Main Editor component\nexport default function Editor() {\n  const [editorState, setEditorState] = useState(null);\n\n  useEffect(() => {\n    // Load the saved editor state from localStorage\n    const savedState = localStorage.getItem(\"editorState\");\n    if (savedState) {\n      setEditorState(JSON.parse(savedState));\n    }\n  }, []);\n\n  const handleEditorChange = (editorState) => {\n    // Save the editor state to localStorage\n    localStorage.setItem(\"editorState\", JSON.stringify(editorState));\n    console.log(editorState);\n    setEditorState(editorState);\n  };\n\n  return (\n    <LexicalComposer initialConfig={editorConfig}>\n      <InitializeEditorPlugin /> {/* Initialize the editor with content */}\n      <div className=\"editor-container\">\n        <ToolbarPlugin />\n        <div className=\"editor-inner\">\n          <RichTextPlugin\n            contentEditable={<ContentEditable className=\"editor-input\" />}\n            placeholder={<Placeholder />}\n            ErrorBoundary={LexicalErrorBoundary}\n          />\n          <HistoryPlugin />\n          <TreeViewPlugin />\n          <AutoFocusPlugin />\n          <CodeHighlightPlugin />\n          <ListPlugin />\n          <LinkPlugin />\n          <AutoLinkPlugin />\n          <ListMaxIndentLevelPlugin maxDepth={7} />\n          <MarkdownShortcutPlugin transformers={TRANSFORMERS} />\n        </div>\n      </div>\n    </LexicalComposer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}