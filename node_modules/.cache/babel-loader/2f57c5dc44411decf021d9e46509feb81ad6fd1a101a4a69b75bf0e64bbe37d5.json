{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar React = require('react');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst useLayoutEffectImpl = CAN_USE_DOM ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = useLayoutEffectImpl;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction ContentEditable(_ref) {\n  let {\n    ariaActiveDescendantID,\n    ariaAutoComplete,\n    ariaControls,\n    ariaDescribedBy,\n    ariaExpanded,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaMultiline,\n    ariaOwneeID,\n    ariaRequired,\n    autoCapitalize,\n    autoComplete,\n    autoCorrect,\n    className,\n    id,\n    role = 'textbox',\n    spellCheck = true,\n    style,\n    tabIndex,\n    testid\n  } = _ref;\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const [isEditable, setEditable] = React.useState(false);\n  const ref = React.useCallback(rootElement => {\n    editor.setRootElement(rootElement);\n  }, [editor]);\n  useLayoutEffect(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-activedescendant\": !isEditable ? null : ariaActiveDescendantID,\n    \"aria-autocomplete\": !isEditable ? null : ariaAutoComplete,\n    \"aria-controls\": !isEditable ? null : ariaControls,\n    \"aria-describedby\": ariaDescribedBy,\n    \"aria-expanded\": !isEditable ? null : role === 'combobox' ? !!ariaExpanded : null,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-multiline\": ariaMultiline,\n    \"aria-owns\": !isEditable ? null : ariaOwneeID,\n    \"aria-required\": ariaRequired,\n    autoCapitalize: autoCapitalize !== undefined ? String(autoCapitalize) : undefined // @ts-ignore This is a valid attribute\n    ,\n\n    autoComplete: autoComplete,\n    autoCorrect: autoCorrect !== undefined ? String(autoCorrect) : undefined,\n    className: className,\n    contentEditable: isEditable,\n    \"data-testid\": testid,\n    id: id,\n    ref: ref,\n    role: !isEditable ? undefined : role,\n    spellCheck: spellCheck,\n    style: style,\n    tabIndex: tabIndex\n  });\n}\nexports.ContentEditable = ContentEditable;","map":{"version":3,"names":["LexicalComposerContext","require","React","CAN_USE_DOM","window","document","createElement","useLayoutEffectImpl","useLayoutEffect","useEffect","ContentEditable","_ref","ariaActiveDescendantID","ariaAutoComplete","ariaControls","ariaDescribedBy","ariaExpanded","ariaLabel","ariaLabelledBy","ariaMultiline","ariaOwneeID","ariaRequired","autoCapitalize","autoComplete","autoCorrect","className","id","role","spellCheck","style","tabIndex","testid","editor","useLexicalComposerContext","isEditable","setEditable","useState","ref","useCallback","rootElement","setRootElement","registerEditableListener","currentIsEditable","undefined","String","contentEditable","exports"],"sources":["/media/ks/My thing/test/textditor/node_modules/@lexical/react/LexicalContentEditable.dev.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar React = require('react');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst useLayoutEffectImpl = CAN_USE_DOM ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = useLayoutEffectImpl;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction ContentEditable({\n  ariaActiveDescendantID,\n  ariaAutoComplete,\n  ariaControls,\n  ariaDescribedBy,\n  ariaExpanded,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaMultiline,\n  ariaOwneeID,\n  ariaRequired,\n  autoCapitalize,\n  autoComplete,\n  autoCorrect,\n  className,\n  id,\n  role = 'textbox',\n  spellCheck = true,\n  style,\n  tabIndex,\n  testid\n}) {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const [isEditable, setEditable] = React.useState(false);\n  const ref = React.useCallback(rootElement => {\n    editor.setRootElement(rootElement);\n  }, [editor]);\n  useLayoutEffect(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-activedescendant\": !isEditable ? null : ariaActiveDescendantID,\n    \"aria-autocomplete\": !isEditable ? null : ariaAutoComplete,\n    \"aria-controls\": !isEditable ? null : ariaControls,\n    \"aria-describedby\": ariaDescribedBy,\n    \"aria-expanded\": !isEditable ? null : role === 'combobox' ? !!ariaExpanded : null,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-multiline\": ariaMultiline,\n    \"aria-owns\": !isEditable ? null : ariaOwneeID,\n    \"aria-required\": ariaRequired,\n    autoCapitalize: autoCapitalize !== undefined ? String(autoCapitalize) : undefined // @ts-ignore This is a valid attribute\n    ,\n    autoComplete: autoComplete,\n    autoCorrect: autoCorrect !== undefined ? String(autoCorrect) : undefined,\n    className: className,\n    contentEditable: isEditable,\n    \"data-testid\": testid,\n    id: id,\n    ref: ref,\n    role: !isEditable ? undefined : role,\n    spellCheck: spellCheck,\n    style: style,\n    tabIndex: tabIndex\n  });\n}\n\nexports.ContentEditable = ContentEditable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}