{"ast":null,"code":"var _jsxFileName = \"/media/ks/My thing/test/textditor_Using_lixical/src/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ExampleTheme from \"./themes/ExampleTheme\";\nimport { LexicalComposer } from \"@lexical/react/LexicalComposer\";\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\";\nimport { ContentEditable } from \"@lexical/react/LexicalContentEditable\";\nimport { HistoryPlugin } from \"@lexical/react/LexicalHistoryPlugin\";\nimport { AutoFocusPlugin } from \"@lexical/react/LexicalAutoFocusPlugin\";\nimport LexicalErrorBoundary from \"@lexical/react/LexicalErrorBoundary\";\nimport TreeViewPlugin from \"./plugins/TreeViewPlugin\";\nimport ToolbarPlugin from \"./plugins/ToolbarPlugin\";\nimport { HeadingNode, QuoteNode } from \"@lexical/rich-text\";\nimport { TableCellNode, TableNode, TableRowNode } from \"@lexical/table\";\nimport { ListItemNode, ListNode } from \"@lexical/list\";\nimport { CodeHighlightNode, CodeNode } from \"@lexical/code\";\nimport { AutoLinkNode, LinkNode } from \"@lexical/link\";\nimport { LinkPlugin } from \"@lexical/react/LexicalLinkPlugin\";\nimport { ListPlugin } from \"@lexical/react/LexicalListPlugin\";\nimport { MarkdownShortcutPlugin } from \"@lexical/react/LexicalMarkdownShortcutPlugin\";\nimport { TRANSFORMERS } from \"@lexical/markdown\";\nimport ListMaxIndentLevelPlugin from \"./plugins/ListMaxIndentLevelPlugin\";\nimport CodeHighlightPlugin from \"./plugins/CodeHighlightPlugin\";\nimport AutoLinkPlugin from \"./plugins/AutoLinkPlugin\";\nimport { ColoredTextNode } from \"./nodes/ColoredTextNode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Placeholder() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-placeholder\",\n    children: \"Enter some rich text...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n_c = Placeholder;\nconst editorConfig = {\n  theme: ExampleTheme,\n  onError(error) {\n    throw error;\n  },\n  nodes: [HeadingNode, ListNode, ListItemNode, QuoteNode, CodeNode, CodeHighlightNode, TableNode, TableCellNode, TableRowNode, AutoLinkNode, LinkNode, ColoredTextNode // Register the node here\n  ]\n};\nexport default function Editor() {\n  _s();\n  const [editorState, setEditorState] = useState(null);\n  useEffect(() => {\n    // Load the saved editor state from localStorage\n    const savedState = localStorage.getItem(\"editorState\");\n    if (savedState) {\n      setEditorState(JSON.parse(savedState));\n    }\n  }, []);\n  const handleEditorChange = editorState => {\n    // Save the editor state to localStorage\n    localStorage.setItem(\"editorState\", JSON.stringify(editorState));\n    console.log(editorState);\n    setEditorState(editorState);\n  };\n  return /*#__PURE__*/_jsxDEV(LexicalComposer, {\n    initialConfig: editorConfig,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(ToolbarPlugin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-inner\",\n        children: [/*#__PURE__*/_jsxDEV(RichTextPlugin, {\n          contentEditable: /*#__PURE__*/_jsxDEV(ContentEditable, {\n            className: \"editor-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 30\n          }, this),\n          placeholder: /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 26\n          }, this),\n          ErrorBoundary: LexicalErrorBoundary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HistoryPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TreeViewPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoFocusPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CodeHighlightPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LinkPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoLinkPlugin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListMaxIndentLevelPlugin, {\n          maxDepth: 7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarkdownShortcutPlugin, {\n          transformers: TRANSFORMERS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Editor, \"vO50NAl90ATfEBE0hTuCGBz9MCs=\");\n_c2 = Editor;\nvar _c, _c2;\n$RefreshReg$(_c, \"Placeholder\");\n$RefreshReg$(_c2, \"Editor\");","map":{"version":3,"names":["React","useEffect","useState","ExampleTheme","LexicalComposer","RichTextPlugin","ContentEditable","HistoryPlugin","AutoFocusPlugin","LexicalErrorBoundary","TreeViewPlugin","ToolbarPlugin","HeadingNode","QuoteNode","TableCellNode","TableNode","TableRowNode","ListItemNode","ListNode","CodeHighlightNode","CodeNode","AutoLinkNode","LinkNode","LinkPlugin","ListPlugin","MarkdownShortcutPlugin","TRANSFORMERS","ListMaxIndentLevelPlugin","CodeHighlightPlugin","AutoLinkPlugin","ColoredTextNode","jsxDEV","_jsxDEV","Placeholder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","editorConfig","theme","onError","error","nodes","Editor","_s","editorState","setEditorState","savedState","localStorage","getItem","JSON","parse","handleEditorChange","setItem","stringify","console","log","initialConfig","contentEditable","placeholder","ErrorBoundary","maxDepth","transformers","_c2","$RefreshReg$"],"sources":["/media/ks/My thing/test/textditor_Using_lixical/src/Editor.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ExampleTheme from \"./themes/ExampleTheme\";\nimport { LexicalComposer } from \"@lexical/react/LexicalComposer\";\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\";\nimport { ContentEditable } from \"@lexical/react/LexicalContentEditable\";\nimport { HistoryPlugin } from \"@lexical/react/LexicalHistoryPlugin\";\nimport { AutoFocusPlugin } from \"@lexical/react/LexicalAutoFocusPlugin\";\nimport LexicalErrorBoundary from \"@lexical/react/LexicalErrorBoundary\";\nimport TreeViewPlugin from \"./plugins/TreeViewPlugin\";\nimport ToolbarPlugin from \"./plugins/ToolbarPlugin\";\nimport { HeadingNode, QuoteNode } from \"@lexical/rich-text\";\nimport { TableCellNode, TableNode, TableRowNode } from \"@lexical/table\";\nimport { ListItemNode, ListNode } from \"@lexical/list\";\nimport { CodeHighlightNode, CodeNode } from \"@lexical/code\";\nimport { AutoLinkNode, LinkNode } from \"@lexical/link\";\nimport { LinkPlugin } from \"@lexical/react/LexicalLinkPlugin\";\nimport { ListPlugin } from \"@lexical/react/LexicalListPlugin\";\nimport { MarkdownShortcutPlugin } from \"@lexical/react/LexicalMarkdownShortcutPlugin\";\nimport { TRANSFORMERS } from \"@lexical/markdown\";\nimport ListMaxIndentLevelPlugin from \"./plugins/ListMaxIndentLevelPlugin\";\nimport CodeHighlightPlugin from \"./plugins/CodeHighlightPlugin\";\nimport AutoLinkPlugin from \"./plugins/AutoLinkPlugin\";\nimport { ColoredTextNode } from \"./nodes/ColoredTextNode\";\n\nfunction Placeholder() {\n  return <div className=\"editor-placeholder\">Enter some rich text...</div>;\n}\n\nconst editorConfig = {\n  theme: ExampleTheme,\n  \n  onError(error) {\n    throw error;\n  },\n  nodes: [\n    HeadingNode,\n    ListNode,\n    ListItemNode,\n    QuoteNode,\n    CodeNode,\n    CodeHighlightNode,\n    TableNode,\n    TableCellNode,\n    TableRowNode,\n    AutoLinkNode,\n    LinkNode,\n    ColoredTextNode, // Register the node here\n  ],\n};\n\nexport default function Editor() {\n  const [editorState, setEditorState] = useState(null);\n\n  useEffect(() => {\n    // Load the saved editor state from localStorage\n    const savedState = localStorage.getItem(\"editorState\");\n    if (savedState) {\n      setEditorState(JSON.parse(savedState));\n    }\n  }, []);\n\n  const handleEditorChange = (editorState) => {\n    // Save the editor state to localStorage\n    localStorage.setItem(\"editorState\", JSON.stringify(editorState));\n    console.log(editorState);\n    setEditorState(editorState);\n  };\n\n  return (\n    <LexicalComposer initialConfig={editorConfig}>\n      <div className=\"editor-container\">\n        \n        <ToolbarPlugin />\n        <div className=\"editor-inner\">\n          <RichTextPlugin\n            contentEditable={<ContentEditable className=\"editor-input\" />}\n            placeholder={<Placeholder />}\n            ErrorBoundary={LexicalErrorBoundary}\n          />\n          <HistoryPlugin />\n          <TreeViewPlugin />\n          <AutoFocusPlugin />\n          <CodeHighlightPlugin />\n          <ListPlugin />\n          <LinkPlugin />\n          <AutoLinkPlugin />\n          <ListMaxIndentLevelPlugin maxDepth={7} />\n          <MarkdownShortcutPlugin transformers={TRANSFORMERS} />\n        </div>\n      </div>\n    </LexicalComposer>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}