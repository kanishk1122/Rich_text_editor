{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar utils = require('@lexical/utils');\nvar lexical = require('lexical');\n\n/** @module @lexical/link */\n\n/** @noInheritDoc */\nclass LinkNode extends lexical.ElementNode {\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n  static getType() {\n    return 'link';\n  }\n  static clone(node) {\n    return new LinkNode(node.__url, {\n      rel: node.__rel,\n      target: node.__target\n    }, node.__key);\n  }\n  constructor(url) {\n    let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let key = arguments.length > 2 ? arguments[2] : undefined;\n    super(key);\n    const {\n      target = null,\n      rel = null\n    } = attributes;\n    this.__url = url;\n    this.__target = target;\n    this.__rel = rel;\n  }\n  createDOM(config) {\n    const element = document.createElement('a');\n    element.href = this.__url;\n    if (this.__target !== null) {\n      element.target = this.__target;\n    }\n    if (this.__rel !== null) {\n      element.rel = this.__rel;\n    }\n    utils.addClassNamesToElement(element, config.theme.link);\n    return element;\n  }\n  updateDOM(prevNode, anchor, config) {\n    const url = this.__url;\n    const target = this.__target;\n    const rel = this.__rel;\n    if (url !== prevNode.__url) {\n      anchor.href = url;\n    }\n    if (target !== prevNode.__target) {\n      if (target) {\n        anchor.target = target;\n      } else {\n        anchor.removeAttribute('target');\n      }\n    }\n    if (rel !== prevNode.__rel) {\n      if (rel) {\n        anchor.rel = rel;\n      } else {\n        anchor.removeAttribute('rel');\n      }\n    }\n    return false;\n  }\n  static importDOM() {\n    return {\n      a: node => ({\n        conversion: convertAnchorElement,\n        priority: 1\n      })\n    };\n  }\n  static importJSON(serializedNode) {\n    const node = $createLinkNode(serializedNode.url, {\n      rel: serializedNode.rel,\n      target: serializedNode.target\n    });\n    node.setFormat(serializedNode.format);\n    node.setIndent(serializedNode.indent);\n    node.setDirection(serializedNode.direction);\n    return node;\n  }\n  exportJSON() {\n    return {\n      ...super.exportJSON(),\n      rel: this.getRel(),\n      target: this.getTarget(),\n      type: 'link',\n      url: this.getURL(),\n      version: 1\n    };\n  }\n  getURL() {\n    return this.getLatest().__url;\n  }\n  setURL(url) {\n    const writable = this.getWritable();\n    writable.__url = url;\n  }\n  getTarget() {\n    return this.getLatest().__target;\n  }\n  setTarget(target) {\n    const writable = this.getWritable();\n    writable.__target = target;\n  }\n  getRel() {\n    return this.getLatest().__rel;\n  }\n  setRel(rel) {\n    const writable = this.getWritable();\n    writable.__rel = rel;\n  }\n  insertNewAfter(selection) {\n    const element = this.getParentOrThrow().insertNewAfter(selection);\n    if (lexical.$isElementNode(element)) {\n      const linkNode = $createLinkNode(this.__url, {\n        rel: this.__rel,\n        target: this.__target\n      });\n      element.append(linkNode);\n      return linkNode;\n    }\n    return null;\n  }\n  canInsertTextBefore() {\n    return false;\n  }\n  canInsertTextAfter() {\n    return false;\n  }\n  canBeEmpty() {\n    return false;\n  }\n  isInline() {\n    return true;\n  }\n  extractWithChild(child, selection, destination) {\n    if (!lexical.$isRangeSelection(selection)) {\n      return false;\n    }\n    const anchorNode = selection.anchor.getNode();\n    const focusNode = selection.focus.getNode();\n    return this.isParentOf(anchorNode) && this.isParentOf(focusNode) && selection.getTextContent().length > 0;\n  }\n}\nfunction convertAnchorElement(domNode) {\n  let node = null;\n  if (domNode instanceof HTMLAnchorElement) {\n    node = $createLinkNode(domNode.getAttribute('href') || '', {\n      rel: domNode.getAttribute('rel'),\n      target: domNode.getAttribute('target')\n    });\n  }\n  return {\n    node\n  };\n}\nfunction $createLinkNode(url, attributes) {\n  return new LinkNode(url, attributes);\n}\nfunction $isLinkNode(node) {\n  return node instanceof LinkNode;\n}\n// Custom node type to override `canInsertTextAfter` that will\n// allow typing within the link\nclass AutoLinkNode extends LinkNode {\n  static getType() {\n    return 'autolink';\n  }\n  static clone(node) {\n    return new AutoLinkNode(node.__url, {\n      rel: node.__rel,\n      target: node.__target\n    }, node.__key);\n  }\n  static importJSON(serializedNode) {\n    const node = $createAutoLinkNode(serializedNode.url, {\n      rel: serializedNode.rel,\n      target: serializedNode.target\n    });\n    node.setFormat(serializedNode.format);\n    node.setIndent(serializedNode.indent);\n    node.setDirection(serializedNode.direction);\n    return node;\n  }\n  static importDOM() {\n    // TODO: Should link node should handle the import over autolink?\n    return null;\n  }\n  exportJSON() {\n    return {\n      ...super.exportJSON(),\n      type: 'autolink',\n      version: 1\n    };\n  }\n  insertNewAfter(selection) {\n    const element = this.getParentOrThrow().insertNewAfter(selection);\n    if (lexical.$isElementNode(element)) {\n      const linkNode = $createAutoLinkNode(this.__url, {\n        rel: this._rel,\n        target: this.__target\n      });\n      element.append(linkNode);\n      return linkNode;\n    }\n    return null;\n  }\n}\nfunction $createAutoLinkNode(url, attributes) {\n  return new AutoLinkNode(url, attributes);\n}\nfunction $isAutoLinkNode(node) {\n  return node instanceof AutoLinkNode;\n}\nconst TOGGLE_LINK_COMMAND = lexical.createCommand();\nfunction toggleLink(url) {\n  let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    target,\n    rel\n  } = attributes;\n  const selection = lexical.$getSelection();\n  if (!lexical.$isRangeSelection(selection)) {\n    return;\n  }\n  const nodes = selection.extract();\n  if (url === null) {\n    // Remove LinkNodes\n    nodes.forEach(node => {\n      const parent = node.getParent();\n      if ($isLinkNode(parent)) {\n        const children = parent.getChildren();\n        for (let i = 0; i < children.length; i++) {\n          parent.insertBefore(children[i]);\n        }\n        parent.remove();\n      }\n    });\n  } else {\n    // Add or merge LinkNodes\n    if (nodes.length === 1) {\n      const firstNode = nodes[0]; // if the first node is a LinkNode or if its\n      // parent is a LinkNode, we update the URL, target and rel.\n\n      const linkNode = $isLinkNode(firstNode) ? firstNode : $getLinkAncestor(firstNode);\n      if (linkNode !== null) {\n        linkNode.setURL(url);\n        if (target !== undefined) {\n          linkNode.setTarget(target);\n        }\n        if (rel !== undefined) {\n          linkNode.setRel(rel);\n        }\n        return;\n      }\n    }\n    let prevParent = null;\n    let linkNode = null;\n    nodes.forEach(node => {\n      const parent = node.getParent();\n      if (parent === linkNode || parent === null || lexical.$isElementNode(node) && !node.isInline()) {\n        return;\n      }\n      if ($isLinkNode(parent)) {\n        linkNode = parent;\n        parent.setURL(url);\n        if (target !== undefined) {\n          parent.setTarget(target);\n        }\n        if (rel !== undefined) {\n          parent.setRel(rel);\n        }\n        return;\n      }\n      if (!parent.is(prevParent)) {\n        prevParent = parent;\n        linkNode = $createLinkNode(url, {\n          rel,\n          target\n        });\n        if ($isLinkNode(parent)) {\n          if (node.getPreviousSibling() === null) {\n            parent.insertBefore(linkNode);\n          } else {\n            parent.insertAfter(linkNode);\n          }\n        } else {\n          node.insertBefore(linkNode);\n        }\n      }\n      if ($isLinkNode(node)) {\n        if (node.is(linkNode)) {\n          return;\n        }\n        if (linkNode !== null) {\n          const children = node.getChildren();\n          for (let i = 0; i < children.length; i++) {\n            linkNode.append(children[i]);\n          }\n        }\n        node.remove();\n        return;\n      }\n      if (linkNode !== null) {\n        linkNode.append(node);\n      }\n    });\n  }\n}\nfunction $getLinkAncestor(node) {\n  return $getAncestor(node, ancestor => $isLinkNode(ancestor));\n}\nfunction $getAncestor(node, predicate) {\n  let parent = node;\n  while (parent !== null && (parent = parent.getParent()) !== null && !predicate(parent));\n  return parent;\n}\nexports.$createAutoLinkNode = $createAutoLinkNode;\nexports.$createLinkNode = $createLinkNode;\nexports.$isAutoLinkNode = $isAutoLinkNode;\nexports.$isLinkNode = $isLinkNode;\nexports.AutoLinkNode = AutoLinkNode;\nexports.LinkNode = LinkNode;\nexports.TOGGLE_LINK_COMMAND = TOGGLE_LINK_COMMAND;\nexports.toggleLink = toggleLink;","map":{"version":3,"names":["utils","require","lexical","LinkNode","ElementNode","getType","clone","node","__url","rel","__rel","target","__target","__key","constructor","url","attributes","arguments","length","undefined","key","createDOM","config","element","document","createElement","href","addClassNamesToElement","theme","link","updateDOM","prevNode","anchor","removeAttribute","importDOM","a","conversion","convertAnchorElement","priority","importJSON","serializedNode","$createLinkNode","setFormat","format","setIndent","indent","setDirection","direction","exportJSON","getRel","getTarget","type","getURL","version","getLatest","setURL","writable","getWritable","setTarget","setRel","insertNewAfter","selection","getParentOrThrow","$isElementNode","linkNode","append","canInsertTextBefore","canInsertTextAfter","canBeEmpty","isInline","extractWithChild","child","destination","$isRangeSelection","anchorNode","getNode","focusNode","focus","isParentOf","getTextContent","domNode","HTMLAnchorElement","getAttribute","$isLinkNode","AutoLinkNode","$createAutoLinkNode","_rel","$isAutoLinkNode","TOGGLE_LINK_COMMAND","createCommand","toggleLink","$getSelection","nodes","extract","forEach","parent","getParent","children","getChildren","i","insertBefore","remove","firstNode","$getLinkAncestor","prevParent","is","getPreviousSibling","insertAfter","$getAncestor","ancestor","predicate","exports"],"sources":["/media/ks/My thing/test/textditor/node_modules/@lexical/react/node_modules/@lexical/link/LexicalLink.dev.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar utils = require('@lexical/utils');\nvar lexical = require('lexical');\n\n/** @module @lexical/link */\n\n/** @noInheritDoc */\nclass LinkNode extends lexical.ElementNode {\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n  static getType() {\n    return 'link';\n  }\n\n  static clone(node) {\n    return new LinkNode(node.__url, {\n      rel: node.__rel,\n      target: node.__target\n    }, node.__key);\n  }\n\n  constructor(url, attributes = {}, key) {\n    super(key);\n    const {\n      target = null,\n      rel = null\n    } = attributes;\n    this.__url = url;\n    this.__target = target;\n    this.__rel = rel;\n  }\n\n  createDOM(config) {\n    const element = document.createElement('a');\n    element.href = this.__url;\n\n    if (this.__target !== null) {\n      element.target = this.__target;\n    }\n\n    if (this.__rel !== null) {\n      element.rel = this.__rel;\n    }\n\n    utils.addClassNamesToElement(element, config.theme.link);\n    return element;\n  }\n\n  updateDOM(prevNode, anchor, config) {\n    const url = this.__url;\n    const target = this.__target;\n    const rel = this.__rel;\n\n    if (url !== prevNode.__url) {\n      anchor.href = url;\n    }\n\n    if (target !== prevNode.__target) {\n      if (target) {\n        anchor.target = target;\n      } else {\n        anchor.removeAttribute('target');\n      }\n    }\n\n    if (rel !== prevNode.__rel) {\n      if (rel) {\n        anchor.rel = rel;\n      } else {\n        anchor.removeAttribute('rel');\n      }\n    }\n\n    return false;\n  }\n\n  static importDOM() {\n    return {\n      a: node => ({\n        conversion: convertAnchorElement,\n        priority: 1\n      })\n    };\n  }\n\n  static importJSON(serializedNode) {\n    const node = $createLinkNode(serializedNode.url, {\n      rel: serializedNode.rel,\n      target: serializedNode.target\n    });\n    node.setFormat(serializedNode.format);\n    node.setIndent(serializedNode.indent);\n    node.setDirection(serializedNode.direction);\n    return node;\n  }\n\n  exportJSON() {\n    return { ...super.exportJSON(),\n      rel: this.getRel(),\n      target: this.getTarget(),\n      type: 'link',\n      url: this.getURL(),\n      version: 1\n    };\n  }\n\n  getURL() {\n    return this.getLatest().__url;\n  }\n\n  setURL(url) {\n    const writable = this.getWritable();\n    writable.__url = url;\n  }\n\n  getTarget() {\n    return this.getLatest().__target;\n  }\n\n  setTarget(target) {\n    const writable = this.getWritable();\n    writable.__target = target;\n  }\n\n  getRel() {\n    return this.getLatest().__rel;\n  }\n\n  setRel(rel) {\n    const writable = this.getWritable();\n    writable.__rel = rel;\n  }\n\n  insertNewAfter(selection) {\n    const element = this.getParentOrThrow().insertNewAfter(selection);\n\n    if (lexical.$isElementNode(element)) {\n      const linkNode = $createLinkNode(this.__url, {\n        rel: this.__rel,\n        target: this.__target\n      });\n      element.append(linkNode);\n      return linkNode;\n    }\n\n    return null;\n  }\n\n  canInsertTextBefore() {\n    return false;\n  }\n\n  canInsertTextAfter() {\n    return false;\n  }\n\n  canBeEmpty() {\n    return false;\n  }\n\n  isInline() {\n    return true;\n  }\n\n  extractWithChild(child, selection, destination) {\n    if (!lexical.$isRangeSelection(selection)) {\n      return false;\n    }\n\n    const anchorNode = selection.anchor.getNode();\n    const focusNode = selection.focus.getNode();\n    return this.isParentOf(anchorNode) && this.isParentOf(focusNode) && selection.getTextContent().length > 0;\n  }\n\n}\n\nfunction convertAnchorElement(domNode) {\n  let node = null;\n\n  if (domNode instanceof HTMLAnchorElement) {\n    node = $createLinkNode(domNode.getAttribute('href') || '', {\n      rel: domNode.getAttribute('rel'),\n      target: domNode.getAttribute('target')\n    });\n  }\n\n  return {\n    node\n  };\n}\n\nfunction $createLinkNode(url, attributes) {\n  return new LinkNode(url, attributes);\n}\nfunction $isLinkNode(node) {\n  return node instanceof LinkNode;\n}\n// Custom node type to override `canInsertTextAfter` that will\n// allow typing within the link\nclass AutoLinkNode extends LinkNode {\n  static getType() {\n    return 'autolink';\n  }\n\n  static clone(node) {\n    return new AutoLinkNode(node.__url, {\n      rel: node.__rel,\n      target: node.__target\n    }, node.__key);\n  }\n\n  static importJSON(serializedNode) {\n    const node = $createAutoLinkNode(serializedNode.url, {\n      rel: serializedNode.rel,\n      target: serializedNode.target\n    });\n    node.setFormat(serializedNode.format);\n    node.setIndent(serializedNode.indent);\n    node.setDirection(serializedNode.direction);\n    return node;\n  }\n\n  static importDOM() {\n    // TODO: Should link node should handle the import over autolink?\n    return null;\n  }\n\n  exportJSON() {\n    return { ...super.exportJSON(),\n      type: 'autolink',\n      version: 1\n    };\n  }\n\n  insertNewAfter(selection) {\n    const element = this.getParentOrThrow().insertNewAfter(selection);\n\n    if (lexical.$isElementNode(element)) {\n      const linkNode = $createAutoLinkNode(this.__url, {\n        rel: this._rel,\n        target: this.__target\n      });\n      element.append(linkNode);\n      return linkNode;\n    }\n\n    return null;\n  }\n\n}\nfunction $createAutoLinkNode(url, attributes) {\n  return new AutoLinkNode(url, attributes);\n}\nfunction $isAutoLinkNode(node) {\n  return node instanceof AutoLinkNode;\n}\nconst TOGGLE_LINK_COMMAND = lexical.createCommand();\nfunction toggleLink(url, attributes = {}) {\n  const {\n    target,\n    rel\n  } = attributes;\n  const selection = lexical.$getSelection();\n\n  if (!lexical.$isRangeSelection(selection)) {\n    return;\n  }\n\n  const nodes = selection.extract();\n\n  if (url === null) {\n    // Remove LinkNodes\n    nodes.forEach(node => {\n      const parent = node.getParent();\n\n      if ($isLinkNode(parent)) {\n        const children = parent.getChildren();\n\n        for (let i = 0; i < children.length; i++) {\n          parent.insertBefore(children[i]);\n        }\n\n        parent.remove();\n      }\n    });\n  } else {\n    // Add or merge LinkNodes\n    if (nodes.length === 1) {\n      const firstNode = nodes[0]; // if the first node is a LinkNode or if its\n      // parent is a LinkNode, we update the URL, target and rel.\n\n      const linkNode = $isLinkNode(firstNode) ? firstNode : $getLinkAncestor(firstNode);\n\n      if (linkNode !== null) {\n        linkNode.setURL(url);\n\n        if (target !== undefined) {\n          linkNode.setTarget(target);\n        }\n\n        if (rel !== undefined) {\n          linkNode.setRel(rel);\n        }\n\n        return;\n      }\n    }\n\n    let prevParent = null;\n    let linkNode = null;\n    nodes.forEach(node => {\n      const parent = node.getParent();\n\n      if (parent === linkNode || parent === null || lexical.$isElementNode(node) && !node.isInline()) {\n        return;\n      }\n\n      if ($isLinkNode(parent)) {\n        linkNode = parent;\n        parent.setURL(url);\n\n        if (target !== undefined) {\n          parent.setTarget(target);\n        }\n\n        if (rel !== undefined) {\n          parent.setRel(rel);\n        }\n\n        return;\n      }\n\n      if (!parent.is(prevParent)) {\n        prevParent = parent;\n        linkNode = $createLinkNode(url, {\n          rel,\n          target\n        });\n\n        if ($isLinkNode(parent)) {\n          if (node.getPreviousSibling() === null) {\n            parent.insertBefore(linkNode);\n          } else {\n            parent.insertAfter(linkNode);\n          }\n        } else {\n          node.insertBefore(linkNode);\n        }\n      }\n\n      if ($isLinkNode(node)) {\n        if (node.is(linkNode)) {\n          return;\n        }\n\n        if (linkNode !== null) {\n          const children = node.getChildren();\n\n          for (let i = 0; i < children.length; i++) {\n            linkNode.append(children[i]);\n          }\n        }\n\n        node.remove();\n        return;\n      }\n\n      if (linkNode !== null) {\n        linkNode.append(node);\n      }\n    });\n  }\n}\n\nfunction $getLinkAncestor(node) {\n  return $getAncestor(node, ancestor => $isLinkNode(ancestor));\n}\n\nfunction $getAncestor(node, predicate) {\n  let parent = node;\n\n  while (parent !== null && (parent = parent.getParent()) !== null && !predicate(parent));\n\n  return parent;\n}\n\nexports.$createAutoLinkNode = $createAutoLinkNode;\nexports.$createLinkNode = $createLinkNode;\nexports.$isAutoLinkNode = $isAutoLinkNode;\nexports.$isLinkNode = $isLinkNode;\nexports.AutoLinkNode = AutoLinkNode;\nexports.LinkNode = LinkNode;\nexports.TOGGLE_LINK_COMMAND = TOGGLE_LINK_COMMAND;\nexports.toggleLink = toggleLink;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACrC,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;;AAEhC;;AAEA;AACA,MAAME,QAAQ,SAASD,OAAO,CAACE,WAAW,CAAC;EACzC;;EAEA;;EAEA;EACA,OAAOC,OAAOA,CAAA,EAAG;IACf,OAAO,MAAM;EACf;EAEA,OAAOC,KAAKA,CAACC,IAAI,EAAE;IACjB,OAAO,IAAIJ,QAAQ,CAACI,IAAI,CAACC,KAAK,EAAE;MAC9BC,GAAG,EAAEF,IAAI,CAACG,KAAK;MACfC,MAAM,EAAEJ,IAAI,CAACK;IACf,CAAC,EAAEL,IAAI,CAACM,KAAK,CAAC;EAChB;EAEAC,WAAWA,CAACC,GAAG,EAAwB;IAAA,IAAtBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,GAAG,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IACnC,KAAK,CAACC,GAAG,CAAC;IACV,MAAM;MACJT,MAAM,GAAG,IAAI;MACbF,GAAG,GAAG;IACR,CAAC,GAAGO,UAAU;IACd,IAAI,CAACR,KAAK,GAAGO,GAAG;IAChB,IAAI,CAACH,QAAQ,GAAGD,MAAM;IACtB,IAAI,CAACD,KAAK,GAAGD,GAAG;EAClB;EAEAY,SAASA,CAACC,MAAM,EAAE;IAChB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAC3CF,OAAO,CAACG,IAAI,GAAG,IAAI,CAAClB,KAAK;IAEzB,IAAI,IAAI,CAACI,QAAQ,KAAK,IAAI,EAAE;MAC1BW,OAAO,CAACZ,MAAM,GAAG,IAAI,CAACC,QAAQ;IAChC;IAEA,IAAI,IAAI,CAACF,KAAK,KAAK,IAAI,EAAE;MACvBa,OAAO,CAACd,GAAG,GAAG,IAAI,CAACC,KAAK;IAC1B;IAEAV,KAAK,CAAC2B,sBAAsB,CAACJ,OAAO,EAAED,MAAM,CAACM,KAAK,CAACC,IAAI,CAAC;IACxD,OAAON,OAAO;EAChB;EAEAO,SAASA,CAACC,QAAQ,EAAEC,MAAM,EAAEV,MAAM,EAAE;IAClC,MAAMP,GAAG,GAAG,IAAI,CAACP,KAAK;IACtB,MAAMG,MAAM,GAAG,IAAI,CAACC,QAAQ;IAC5B,MAAMH,GAAG,GAAG,IAAI,CAACC,KAAK;IAEtB,IAAIK,GAAG,KAAKgB,QAAQ,CAACvB,KAAK,EAAE;MAC1BwB,MAAM,CAACN,IAAI,GAAGX,GAAG;IACnB;IAEA,IAAIJ,MAAM,KAAKoB,QAAQ,CAACnB,QAAQ,EAAE;MAChC,IAAID,MAAM,EAAE;QACVqB,MAAM,CAACrB,MAAM,GAAGA,MAAM;MACxB,CAAC,MAAM;QACLqB,MAAM,CAACC,eAAe,CAAC,QAAQ,CAAC;MAClC;IACF;IAEA,IAAIxB,GAAG,KAAKsB,QAAQ,CAACrB,KAAK,EAAE;MAC1B,IAAID,GAAG,EAAE;QACPuB,MAAM,CAACvB,GAAG,GAAGA,GAAG;MAClB,CAAC,MAAM;QACLuB,MAAM,CAACC,eAAe,CAAC,KAAK,CAAC;MAC/B;IACF;IAEA,OAAO,KAAK;EACd;EAEA,OAAOC,SAASA,CAAA,EAAG;IACjB,OAAO;MACLC,CAAC,EAAE5B,IAAI,KAAK;QACV6B,UAAU,EAAEC,oBAAoB;QAChCC,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC;EACH;EAEA,OAAOC,UAAUA,CAACC,cAAc,EAAE;IAChC,MAAMjC,IAAI,GAAGkC,eAAe,CAACD,cAAc,CAACzB,GAAG,EAAE;MAC/CN,GAAG,EAAE+B,cAAc,CAAC/B,GAAG;MACvBE,MAAM,EAAE6B,cAAc,CAAC7B;IACzB,CAAC,CAAC;IACFJ,IAAI,CAACmC,SAAS,CAACF,cAAc,CAACG,MAAM,CAAC;IACrCpC,IAAI,CAACqC,SAAS,CAACJ,cAAc,CAACK,MAAM,CAAC;IACrCtC,IAAI,CAACuC,YAAY,CAACN,cAAc,CAACO,SAAS,CAAC;IAC3C,OAAOxC,IAAI;EACb;EAEAyC,UAAUA,CAAA,EAAG;IACX,OAAO;MAAE,GAAG,KAAK,CAACA,UAAU,CAAC,CAAC;MAC5BvC,GAAG,EAAE,IAAI,CAACwC,MAAM,CAAC,CAAC;MAClBtC,MAAM,EAAE,IAAI,CAACuC,SAAS,CAAC,CAAC;MACxBC,IAAI,EAAE,MAAM;MACZpC,GAAG,EAAE,IAAI,CAACqC,MAAM,CAAC,CAAC;MAClBC,OAAO,EAAE;IACX,CAAC;EACH;EAEAD,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC9C,KAAK;EAC/B;EAEA+C,MAAMA,CAACxC,GAAG,EAAE;IACV,MAAMyC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IACnCD,QAAQ,CAAChD,KAAK,GAAGO,GAAG;EACtB;EAEAmC,SAASA,CAAA,EAAG;IACV,OAAO,IAAI,CAACI,SAAS,CAAC,CAAC,CAAC1C,QAAQ;EAClC;EAEA8C,SAASA,CAAC/C,MAAM,EAAE;IAChB,MAAM6C,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IACnCD,QAAQ,CAAC5C,QAAQ,GAAGD,MAAM;EAC5B;EAEAsC,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACK,SAAS,CAAC,CAAC,CAAC5C,KAAK;EAC/B;EAEAiD,MAAMA,CAAClD,GAAG,EAAE;IACV,MAAM+C,QAAQ,GAAG,IAAI,CAACC,WAAW,CAAC,CAAC;IACnCD,QAAQ,CAAC9C,KAAK,GAAGD,GAAG;EACtB;EAEAmD,cAAcA,CAACC,SAAS,EAAE;IACxB,MAAMtC,OAAO,GAAG,IAAI,CAACuC,gBAAgB,CAAC,CAAC,CAACF,cAAc,CAACC,SAAS,CAAC;IAEjE,IAAI3D,OAAO,CAAC6D,cAAc,CAACxC,OAAO,CAAC,EAAE;MACnC,MAAMyC,QAAQ,GAAGvB,eAAe,CAAC,IAAI,CAACjC,KAAK,EAAE;QAC3CC,GAAG,EAAE,IAAI,CAACC,KAAK;QACfC,MAAM,EAAE,IAAI,CAACC;MACf,CAAC,CAAC;MACFW,OAAO,CAAC0C,MAAM,CAACD,QAAQ,CAAC;MACxB,OAAOA,QAAQ;IACjB;IAEA,OAAO,IAAI;EACb;EAEAE,mBAAmBA,CAAA,EAAG;IACpB,OAAO,KAAK;EACd;EAEAC,kBAAkBA,CAAA,EAAG;IACnB,OAAO,KAAK;EACd;EAEAC,UAAUA,CAAA,EAAG;IACX,OAAO,KAAK;EACd;EAEAC,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI;EACb;EAEAC,gBAAgBA,CAACC,KAAK,EAAEV,SAAS,EAAEW,WAAW,EAAE;IAC9C,IAAI,CAACtE,OAAO,CAACuE,iBAAiB,CAACZ,SAAS,CAAC,EAAE;MACzC,OAAO,KAAK;IACd;IAEA,MAAMa,UAAU,GAAGb,SAAS,CAAC7B,MAAM,CAAC2C,OAAO,CAAC,CAAC;IAC7C,MAAMC,SAAS,GAAGf,SAAS,CAACgB,KAAK,CAACF,OAAO,CAAC,CAAC;IAC3C,OAAO,IAAI,CAACG,UAAU,CAACJ,UAAU,CAAC,IAAI,IAAI,CAACI,UAAU,CAACF,SAAS,CAAC,IAAIf,SAAS,CAACkB,cAAc,CAAC,CAAC,CAAC7D,MAAM,GAAG,CAAC;EAC3G;AAEF;AAEA,SAASmB,oBAAoBA,CAAC2C,OAAO,EAAE;EACrC,IAAIzE,IAAI,GAAG,IAAI;EAEf,IAAIyE,OAAO,YAAYC,iBAAiB,EAAE;IACxC1E,IAAI,GAAGkC,eAAe,CAACuC,OAAO,CAACE,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE;MACzDzE,GAAG,EAAEuE,OAAO,CAACE,YAAY,CAAC,KAAK,CAAC;MAChCvE,MAAM,EAAEqE,OAAO,CAACE,YAAY,CAAC,QAAQ;IACvC,CAAC,CAAC;EACJ;EAEA,OAAO;IACL3E;EACF,CAAC;AACH;AAEA,SAASkC,eAAeA,CAAC1B,GAAG,EAAEC,UAAU,EAAE;EACxC,OAAO,IAAIb,QAAQ,CAACY,GAAG,EAAEC,UAAU,CAAC;AACtC;AACA,SAASmE,WAAWA,CAAC5E,IAAI,EAAE;EACzB,OAAOA,IAAI,YAAYJ,QAAQ;AACjC;AACA;AACA;AACA,MAAMiF,YAAY,SAASjF,QAAQ,CAAC;EAClC,OAAOE,OAAOA,CAAA,EAAG;IACf,OAAO,UAAU;EACnB;EAEA,OAAOC,KAAKA,CAACC,IAAI,EAAE;IACjB,OAAO,IAAI6E,YAAY,CAAC7E,IAAI,CAACC,KAAK,EAAE;MAClCC,GAAG,EAAEF,IAAI,CAACG,KAAK;MACfC,MAAM,EAAEJ,IAAI,CAACK;IACf,CAAC,EAAEL,IAAI,CAACM,KAAK,CAAC;EAChB;EAEA,OAAO0B,UAAUA,CAACC,cAAc,EAAE;IAChC,MAAMjC,IAAI,GAAG8E,mBAAmB,CAAC7C,cAAc,CAACzB,GAAG,EAAE;MACnDN,GAAG,EAAE+B,cAAc,CAAC/B,GAAG;MACvBE,MAAM,EAAE6B,cAAc,CAAC7B;IACzB,CAAC,CAAC;IACFJ,IAAI,CAACmC,SAAS,CAACF,cAAc,CAACG,MAAM,CAAC;IACrCpC,IAAI,CAACqC,SAAS,CAACJ,cAAc,CAACK,MAAM,CAAC;IACrCtC,IAAI,CAACuC,YAAY,CAACN,cAAc,CAACO,SAAS,CAAC;IAC3C,OAAOxC,IAAI;EACb;EAEA,OAAO2B,SAASA,CAAA,EAAG;IACjB;IACA,OAAO,IAAI;EACb;EAEAc,UAAUA,CAAA,EAAG;IACX,OAAO;MAAE,GAAG,KAAK,CAACA,UAAU,CAAC,CAAC;MAC5BG,IAAI,EAAE,UAAU;MAChBE,OAAO,EAAE;IACX,CAAC;EACH;EAEAO,cAAcA,CAACC,SAAS,EAAE;IACxB,MAAMtC,OAAO,GAAG,IAAI,CAACuC,gBAAgB,CAAC,CAAC,CAACF,cAAc,CAACC,SAAS,CAAC;IAEjE,IAAI3D,OAAO,CAAC6D,cAAc,CAACxC,OAAO,CAAC,EAAE;MACnC,MAAMyC,QAAQ,GAAGqB,mBAAmB,CAAC,IAAI,CAAC7E,KAAK,EAAE;QAC/CC,GAAG,EAAE,IAAI,CAAC6E,IAAI;QACd3E,MAAM,EAAE,IAAI,CAACC;MACf,CAAC,CAAC;MACFW,OAAO,CAAC0C,MAAM,CAACD,QAAQ,CAAC;MACxB,OAAOA,QAAQ;IACjB;IAEA,OAAO,IAAI;EACb;AAEF;AACA,SAASqB,mBAAmBA,CAACtE,GAAG,EAAEC,UAAU,EAAE;EAC5C,OAAO,IAAIoE,YAAY,CAACrE,GAAG,EAAEC,UAAU,CAAC;AAC1C;AACA,SAASuE,eAAeA,CAAChF,IAAI,EAAE;EAC7B,OAAOA,IAAI,YAAY6E,YAAY;AACrC;AACA,MAAMI,mBAAmB,GAAGtF,OAAO,CAACuF,aAAa,CAAC,CAAC;AACnD,SAASC,UAAUA,CAAC3E,GAAG,EAAmB;EAAA,IAAjBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACtC,MAAM;IACJN,MAAM;IACNF;EACF,CAAC,GAAGO,UAAU;EACd,MAAM6C,SAAS,GAAG3D,OAAO,CAACyF,aAAa,CAAC,CAAC;EAEzC,IAAI,CAACzF,OAAO,CAACuE,iBAAiB,CAACZ,SAAS,CAAC,EAAE;IACzC;EACF;EAEA,MAAM+B,KAAK,GAAG/B,SAAS,CAACgC,OAAO,CAAC,CAAC;EAEjC,IAAI9E,GAAG,KAAK,IAAI,EAAE;IAChB;IACA6E,KAAK,CAACE,OAAO,CAACvF,IAAI,IAAI;MACpB,MAAMwF,MAAM,GAAGxF,IAAI,CAACyF,SAAS,CAAC,CAAC;MAE/B,IAAIb,WAAW,CAACY,MAAM,CAAC,EAAE;QACvB,MAAME,QAAQ,GAAGF,MAAM,CAACG,WAAW,CAAC,CAAC;QAErC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAAC/E,MAAM,EAAEiF,CAAC,EAAE,EAAE;UACxCJ,MAAM,CAACK,YAAY,CAACH,QAAQ,CAACE,CAAC,CAAC,CAAC;QAClC;QAEAJ,MAAM,CAACM,MAAM,CAAC,CAAC;MACjB;IACF,CAAC,CAAC;EACJ,CAAC,MAAM;IACL;IACA,IAAIT,KAAK,CAAC1E,MAAM,KAAK,CAAC,EAAE;MACtB,MAAMoF,SAAS,GAAGV,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B;;MAEA,MAAM5B,QAAQ,GAAGmB,WAAW,CAACmB,SAAS,CAAC,GAAGA,SAAS,GAAGC,gBAAgB,CAACD,SAAS,CAAC;MAEjF,IAAItC,QAAQ,KAAK,IAAI,EAAE;QACrBA,QAAQ,CAACT,MAAM,CAACxC,GAAG,CAAC;QAEpB,IAAIJ,MAAM,KAAKQ,SAAS,EAAE;UACxB6C,QAAQ,CAACN,SAAS,CAAC/C,MAAM,CAAC;QAC5B;QAEA,IAAIF,GAAG,KAAKU,SAAS,EAAE;UACrB6C,QAAQ,CAACL,MAAM,CAAClD,GAAG,CAAC;QACtB;QAEA;MACF;IACF;IAEA,IAAI+F,UAAU,GAAG,IAAI;IACrB,IAAIxC,QAAQ,GAAG,IAAI;IACnB4B,KAAK,CAACE,OAAO,CAACvF,IAAI,IAAI;MACpB,MAAMwF,MAAM,GAAGxF,IAAI,CAACyF,SAAS,CAAC,CAAC;MAE/B,IAAID,MAAM,KAAK/B,QAAQ,IAAI+B,MAAM,KAAK,IAAI,IAAI7F,OAAO,CAAC6D,cAAc,CAACxD,IAAI,CAAC,IAAI,CAACA,IAAI,CAAC8D,QAAQ,CAAC,CAAC,EAAE;QAC9F;MACF;MAEA,IAAIc,WAAW,CAACY,MAAM,CAAC,EAAE;QACvB/B,QAAQ,GAAG+B,MAAM;QACjBA,MAAM,CAACxC,MAAM,CAACxC,GAAG,CAAC;QAElB,IAAIJ,MAAM,KAAKQ,SAAS,EAAE;UACxB4E,MAAM,CAACrC,SAAS,CAAC/C,MAAM,CAAC;QAC1B;QAEA,IAAIF,GAAG,KAAKU,SAAS,EAAE;UACrB4E,MAAM,CAACpC,MAAM,CAAClD,GAAG,CAAC;QACpB;QAEA;MACF;MAEA,IAAI,CAACsF,MAAM,CAACU,EAAE,CAACD,UAAU,CAAC,EAAE;QAC1BA,UAAU,GAAGT,MAAM;QACnB/B,QAAQ,GAAGvB,eAAe,CAAC1B,GAAG,EAAE;UAC9BN,GAAG;UACHE;QACF,CAAC,CAAC;QAEF,IAAIwE,WAAW,CAACY,MAAM,CAAC,EAAE;UACvB,IAAIxF,IAAI,CAACmG,kBAAkB,CAAC,CAAC,KAAK,IAAI,EAAE;YACtCX,MAAM,CAACK,YAAY,CAACpC,QAAQ,CAAC;UAC/B,CAAC,MAAM;YACL+B,MAAM,CAACY,WAAW,CAAC3C,QAAQ,CAAC;UAC9B;QACF,CAAC,MAAM;UACLzD,IAAI,CAAC6F,YAAY,CAACpC,QAAQ,CAAC;QAC7B;MACF;MAEA,IAAImB,WAAW,CAAC5E,IAAI,CAAC,EAAE;QACrB,IAAIA,IAAI,CAACkG,EAAE,CAACzC,QAAQ,CAAC,EAAE;UACrB;QACF;QAEA,IAAIA,QAAQ,KAAK,IAAI,EAAE;UACrB,MAAMiC,QAAQ,GAAG1F,IAAI,CAAC2F,WAAW,CAAC,CAAC;UAEnC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAAC/E,MAAM,EAAEiF,CAAC,EAAE,EAAE;YACxCnC,QAAQ,CAACC,MAAM,CAACgC,QAAQ,CAACE,CAAC,CAAC,CAAC;UAC9B;QACF;QAEA5F,IAAI,CAAC8F,MAAM,CAAC,CAAC;QACb;MACF;MAEA,IAAIrC,QAAQ,KAAK,IAAI,EAAE;QACrBA,QAAQ,CAACC,MAAM,CAAC1D,IAAI,CAAC;MACvB;IACF,CAAC,CAAC;EACJ;AACF;AAEA,SAASgG,gBAAgBA,CAAChG,IAAI,EAAE;EAC9B,OAAOqG,YAAY,CAACrG,IAAI,EAAEsG,QAAQ,IAAI1B,WAAW,CAAC0B,QAAQ,CAAC,CAAC;AAC9D;AAEA,SAASD,YAAYA,CAACrG,IAAI,EAAEuG,SAAS,EAAE;EACrC,IAAIf,MAAM,GAAGxF,IAAI;EAEjB,OAAOwF,MAAM,KAAK,IAAI,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACC,SAAS,CAAC,CAAC,MAAM,IAAI,IAAI,CAACc,SAAS,CAACf,MAAM,CAAC,CAAC;EAEvF,OAAOA,MAAM;AACf;AAEAgB,OAAO,CAAC1B,mBAAmB,GAAGA,mBAAmB;AACjD0B,OAAO,CAACtE,eAAe,GAAGA,eAAe;AACzCsE,OAAO,CAACxB,eAAe,GAAGA,eAAe;AACzCwB,OAAO,CAAC5B,WAAW,GAAGA,WAAW;AACjC4B,OAAO,CAAC3B,YAAY,GAAGA,YAAY;AACnC2B,OAAO,CAAC5G,QAAQ,GAAGA,QAAQ;AAC3B4G,OAAO,CAACvB,mBAAmB,GAAGA,mBAAmB;AACjDuB,OAAO,CAACrB,UAAU,GAAGA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}