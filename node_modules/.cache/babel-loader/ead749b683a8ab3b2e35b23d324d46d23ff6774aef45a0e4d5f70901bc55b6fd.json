{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar React = require('react');\nvar text = require('@lexical/text');\nvar utils = require('@lexical/utils');\nvar reactDom = require('react-dom');\nvar dragon = require('@lexical/dragon');\nvar richText = require('@lexical/rich-text');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst useLayoutEffectImpl = CAN_USE_DOM ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = useLayoutEffectImpl;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read(text.$canShowPlaceholderCurry(editor.isComposing(), editor.isEditable()));\n  return currentCanShowPlaceholder;\n}\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = React.useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffect(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n    resetCanShowPlaceholder();\n    return utils.mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction useDecorators(editor) {\n  const [decorators, setDecorators] = React.useState(() => editor.getDecorators()); // Subscribe to changes\n\n  useLayoutEffect(() => {\n    return editor.registerDecoratorListener(nextDecorators => {\n      reactDom.flushSync(() => {\n        setDecorators(nextDecorators);\n      });\n    });\n  }, [editor]);\n  React.useEffect(() => {\n    // If the content editable mounts before the subscription is added, then\n    // nothing will be rendered on initial pass. We can get around that by\n    // ensuring that we set the value.\n    setDecorators(editor.getDecorators());\n  }, [editor]); // Return decorators defined as React Portals\n\n  return React.useMemo(() => {\n    const decoratedPortals = [];\n    const decoratorKeys = Object.keys(decorators);\n    for (let i = 0; i < decoratorKeys.length; i++) {\n      const nodeKey = decoratorKeys[i];\n      const reactDecorator = decorators[nodeKey];\n      const element = editor.getElementByKey(nodeKey);\n      if (element !== null) {\n        decoratedPortals.push(/*#__PURE__*/reactDom.createPortal(reactDecorator, element));\n      }\n    }\n    return decoratedPortals;\n  }, [decorators, editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction useRichTextSetup(editor) {\n  useLayoutEffect(() => {\n    return utils.mergeRegister(richText.registerRichText(editor), dragon.registerDragonSupport(editor)); // We only do this for init\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction RichTextPlugin(_ref) {\n  let {\n    contentEditable,\n    placeholder\n  } = _ref;\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const decorators = useDecorators(editor);\n  useRichTextSetup(editor);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, contentEditable, showPlaceholder && placeholder, decorators);\n}\nexports.RichTextPlugin = RichTextPlugin;","map":{"version":3,"names":["LexicalComposerContext","require","React","text","utils","reactDom","dragon","richText","CAN_USE_DOM","window","document","createElement","useLayoutEffectImpl","useLayoutEffect","useEffect","canShowPlaceholderFromCurrentEditorState","editor","currentCanShowPlaceholder","getEditorState","read","$canShowPlaceholderCurry","isComposing","isEditable","useCanShowPlaceholder","canShowPlaceholder","setCanShowPlaceholder","useState","resetCanShowPlaceholder","mergeRegister","registerUpdateListener","registerEditableListener","useDecorators","decorators","setDecorators","getDecorators","registerDecoratorListener","nextDecorators","flushSync","useMemo","decoratedPortals","decoratorKeys","Object","keys","i","length","nodeKey","reactDecorator","element","getElementByKey","push","createPortal","useRichTextSetup","registerRichText","registerDragonSupport","RichTextPlugin","_ref","contentEditable","placeholder","useLexicalComposerContext","showPlaceholder","Fragment","exports"],"sources":["/media/ks/My thing/test/textditor/node_modules/@lexical/react/LexicalRichTextPlugin.dev.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar React = require('react');\nvar text = require('@lexical/text');\nvar utils = require('@lexical/utils');\nvar reactDom = require('react-dom');\nvar dragon = require('@lexical/dragon');\nvar richText = require('@lexical/rich-text');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst useLayoutEffectImpl = CAN_USE_DOM ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = useLayoutEffectImpl;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read(text.$canShowPlaceholderCurry(editor.isComposing(), editor.isEditable()));\n  return currentCanShowPlaceholder;\n}\n\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = React.useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffect(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n\n    resetCanShowPlaceholder();\n    return utils.mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction useDecorators(editor) {\n  const [decorators, setDecorators] = React.useState(() => editor.getDecorators()); // Subscribe to changes\n\n  useLayoutEffect(() => {\n    return editor.registerDecoratorListener(nextDecorators => {\n      reactDom.flushSync(() => {\n        setDecorators(nextDecorators);\n      });\n    });\n  }, [editor]);\n  React.useEffect(() => {\n    // If the content editable mounts before the subscription is added, then\n    // nothing will be rendered on initial pass. We can get around that by\n    // ensuring that we set the value.\n    setDecorators(editor.getDecorators());\n  }, [editor]); // Return decorators defined as React Portals\n\n  return React.useMemo(() => {\n    const decoratedPortals = [];\n    const decoratorKeys = Object.keys(decorators);\n\n    for (let i = 0; i < decoratorKeys.length; i++) {\n      const nodeKey = decoratorKeys[i];\n      const reactDecorator = decorators[nodeKey];\n      const element = editor.getElementByKey(nodeKey);\n\n      if (element !== null) {\n        decoratedPortals.push( /*#__PURE__*/reactDom.createPortal(reactDecorator, element));\n      }\n    }\n\n    return decoratedPortals;\n  }, [decorators, editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction useRichTextSetup(editor) {\n  useLayoutEffect(() => {\n    return utils.mergeRegister(richText.registerRichText(editor), dragon.registerDragonSupport(editor)); // We only do this for init\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction RichTextPlugin({\n  contentEditable,\n  placeholder\n}) {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const decorators = useDecorators(editor);\n  useRichTextSetup(editor);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, contentEditable, showPlaceholder && placeholder, decorators);\n}\n\nexports.RichTextPlugin = RichTextPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}